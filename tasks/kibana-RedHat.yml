---
- name: Ensure libselinux-python on CentOS 6.x
  become: yes
  yum: name=libselinux-python state=present update_cache=yes
  when: ansible_distribution is match("CentOS") and ansible_distribution_major_version is match("6")

- name: RedHat - remove Elasticsearch repo if exists
  become: yes
  shell: "rm -f /etc/yum.repos.d/elasticsearch-*.repo"
  when: es_use_repository
  failed_when: False
  changed_when: False

- name: RedHat - add Elasticsearch repo
  become: yes
  template: src=elasticsearch.repo dest=/etc/yum.repos.d/elasticsearch-{{ es_repo_name }}.repo
  when: es_use_repository
  changed_when: False

- name: RedHat - include versionlock
  include: kibana-RedHat-version-lock.yml
  when: kibana_version_lock

- name: Discover "inverse" package name step 1
  set_fact: kibana_inverted_package_name='kibana'
  when:
    - kibana_package_name == 'kibana-oss'

- name: Discover "inverse" package name step 2
  set_fact: kibana_inverted_package_name='kibana-oss'
  when:
    - kibana_package_name == 'kibana'

- name: Gracefully stop and remove kibana if we are switching version.
  block:
    - name: RedHat - Check if other package is installed
      shell: yum list installed {{ kibana_inverted_package_name }}
      register: kibana_inverted_package
      failed_when: False
      changed_when: False
 
    - name: RedHat - stop {{ kibana_inverted_package_name }}
      become: yes
      service:
        name: '{{ instance_init_script | basename }}'
        state: stopped
      when: "'Installed Packages' in kibana_inverted_package.stdout"

    - name: RedHat - remove {{ kibana_inverted_package_name }}
      become: yes
      yum:
        name: "{{ kibana_inverted_package_name }}"
        state: absent
      when: "'Installed Packages' in kibana_inverted_package.stdout"

- name: RedHat - Install kibana
  become: yes
  yum:
    name: '{{ kibana_package_name }}{% if es_version is defined and es_version != ""  %}-{{ es_version }}{% endif %}'
    state: present
    update_cache: yes
  when: es_use_repository
  register: redhat_kibana_install_from_repo
  notify: restart kibana
  until: redhat_kibana_install_from_repo.rc == 0
  retries: 5
  delay: 10

- name: RedHat - Install Kibana from url
  become: yes
  yum: name={% if kibana_custom_package_url is defined %}{{ kibana_custom_package_url }}{% else %}{{ kibana_package_url }}-{{ es_version }}-x86_64.rpm{% endif %} state=present
  when: not es_use_repository
  register: kibana_install_from_package
  notify: restart kibana
